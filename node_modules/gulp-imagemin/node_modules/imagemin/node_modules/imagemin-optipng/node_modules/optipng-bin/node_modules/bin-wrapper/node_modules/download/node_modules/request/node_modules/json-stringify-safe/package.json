{
  "name": "json-stringify-safe",
  "version": "5.0.0",
  "description": "Like JSON.stringify, but doesn't blow up on circular refs",
  "main": "stringify.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/isaacs/json-stringify-safe"
  },
  "keywords": [
    "json",
    "stringify",
    "circular",
    "safe"
  ],
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me"
  },
  "license": "BSD",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/isaacs/json-stringify-safe/issues"
  },
  "_id": "json-stringify-safe@5.0.0",
  "dist": {
    "tarball": "http://r.cnpmjs.org/json-stringify-safe/download/json-stringify-safe-5.0.0.tgz",
    "shasum": "4c1f228b5050837eba9d21f50c2e6e320624566e",
    "size": 2653,
    "noattachment": false
  },
  "_from": "json-stringify-safe@~5.0.0",
  "_npmVersion": "1.3.6",
  "_npmUser": {
    "name": "isaacs",
    "email": "i@izs.me"
  },
  "maintainers": [
    {
      "name": "isaacs",
      "email": "i@izs.me"
    }
  ],
  "directories": {},
  "publish_time": 1375475297007,
  "_cnpm_publish_time": 1375475297007,
  "_shasum": "4c1f228b5050837eba9d21f50c2e6e320624566e",
  "_resolved": "http://r.cnpmjs.org/json-stringify-safe/download/json-stringify-safe-5.0.0.tgz",
  "readme": "# json-stringify-safe\n\nLike JSON.stringify, but doesn't throw on circular references.\n\n## Usage\n\nTakes the same arguments as `JSON.stringify`.\n\n```javascript\nvar stringify = require('json-stringify-safe');\nvar circularObj = {};\ncircularObj.circularRef = circularObj;\ncircularObj.list = [ circularObj, circularObj ];\nconsole.log(stringify(circularObj, null, 2));\n```\n\nOutput:\n\n```json\n{\n  \"circularRef\": \"[Circular]\",\n  \"list\": [\n    \"[Circular]\",\n    \"[Circular]\"\n  ]\n}\n```\n\n## Details\n\n```\nstringify(obj, serializer, indent, decycler)\n```\n\nThe first three arguments are the same as to JSON.stringify.  The last\nis an argument that's only used when the object has been seen already.\n\nThe default `decycler` function returns the string `'[Circular]'`.\nIf, for example, you pass in `function(k,v){}` (return nothing) then it\nwill prune cycles.  If you pass in `function(k,v){ return {foo: 'bar'}}`,\nthen cyclical objects will always be represented as `{\"foo\":\"bar\"}` in\nthe result.\n\n```\nstringify.getSerialize(serializer, decycler)\n```\n\nReturns a serializer that can be used elsewhere.  This is the actual\nfunction that's passed to JSON.stringify.\n",
  "homepage": "https://github.com/isaacs/json-stringify-safe"
}
